on:
  push:
    paths:
      - "account_service/**"
      - ".github/workflows/account_service.yml"
      - "docker-compose.yml"


jobs:
  build_account_service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file account_service/pom.xml

  test_account_service:
    needs: build_account_service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Test with Maven
        run: mvn test --file account_service/pom.xml

  sonarcloud_account_service:
    needs: test_account_service
    name: Sonarcloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_ACCOUNT_SERVICE }}
        run: cd account_service && mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=radolinapetrova_VeggieTalk_account_service && mvn sonar:sonar -Pcoverage

  docker:
    needs: sonarcloud_account_service
    name: docker ig
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Decrypt application.properties
        run: |
          git-crypt unlock
          cd account_service/src/main/resources
          cp application.properties.decrypted application.properties
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'
      - name: Build JAR file
        run: |
          cd account_service
          mvn clean install
      - name: Build Docker image
        run: |
          cd account_service
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/account_service_img:latest .
      - name: Push Docker image to Docker Hub
        run: |
          docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/account_service_img:latest
      - name: Run Docker Compose
        run: |
          docker-compose up -d
          docker ps
