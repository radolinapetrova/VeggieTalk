on:
  push:
    paths:
      - "{{SERVICE_NAME}}/**"
      - ".github/workflows/{{SERVICE_NAME}}.yml"


jobs:
  build_{{SERVICE_NAME}}:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file {{SERVICE_NAME}}/pom.xml

  test_{{SERVICE_NAME}}:
    needs: build_{{SERVICE_NAME}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Test with Maven
        run: mvn test --file {{SERVICE_NAME}}/pom.xml

  sonarcloud_{{SERVICE_NAME}}:
    needs: test_{{SERVICE_NAME}}
    name: Sonarcloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_{{SERVICE_NAME_UPPER}} }}
        run: cd {{SERVICE_NAME}} && mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=radolinapetrova_VeggieTalk_{{SERVICE_NAME}} && mvn sonar:sonar -Pcoverage

  docker:
    needs: sonarcloud_{{SERVICE_NAME}}
    name: docker ig
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'
      - name: Build JAR file
        run: |
          cd {{SERVICE_NAME}}
          mvn clean package
      - name: Build Docker image
        run: |
          cd {{SERVICE_NAME}}
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/{{SERVICE_NAME}}_img:latest .
      - name: Push Docker image to Docker Hub
        run: |
          docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/{{SERVICE_NAME}}_img:latest
      - name: Run Docker Compose
        run: |
          cd {{SERVICE_NAME}}
          docker-compose up -d
          docker ps