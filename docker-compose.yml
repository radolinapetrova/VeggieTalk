#services:
#  postgres_post:
#    ports:
#      - 5432:5432
#    container_name: postgres_post
#    image: postgres
#    environment:
#      POSTGRES_PASSWORD: R@d!0252
#      POSTGRES_USER: postgres
#      POSTGRES_DB: post_info
#    volumes:
#      - //c/postgres_container_post_data:/var/lib/postgresql/data
#    restart: always
#
#  backend:
#    image: radolina/post_service_img:latest
#    container_name: post_service
#    ports:
#      - "8081:8081"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_post:5432/post_info
#    depends_on:
#      - postgres_post


#  postgres_post:
#    ports:
#      - 5431:5431
#    container_name: postgres_post
#    image: postgres
#    environment:
#      POSTGRES_PASSWORD: R@d!0252
#      POSTGRES_USER: postgres
#      POSTGRES_DB: post_info
#    volumes:
#      - //c/postgres_container_post_data:/var/lib/postgresql/data
#    restart: always
#
#  post_service:
#    image: radolina/post_service_img:latest
#    container_name: post_service
#    ports:
#      - "8081:8081"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_post:5431/post_info
#    depends_on:
#      - postgres_post




services:
  postgres_post:
    ports:
      - 5431:5431
    container_name: postgres_post
    image: postgres
    environment:
      POSTGRES_PASSWORD: R@d!0252
      POSTGRES_USER: postgres
      POSTGRES_DB: post_info
    volumes:
      - //c/postgres_container_post_data:/var/lib/postgresql/data
    restart: always

  post_service:
    image: radolina/post_service_img:latest
    container_name: post_service
    ports:
      - 8081:8081
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_post:5432/post_info
    depends_on:
      - postgres_post

  postgres_account:
    container_name: postgres_account
    image: postgres
    environment:
      POSTGRES_PASSWORD: R@d!0252
      POSTGRES_USER: postgres
      POSTGRES_DB: account_info
      PGDATA: /var/lib/postgresql/data
    volumes:
      - //c/postgres_account_container_data:/var/lib/postgresql/data
    expose:
      - "5433"
    ports:
      - "5433:5433"
    command: -p 5433
    restart: always


  account_service:
    image: radolina/account_service_img:latest
    container_name: account_service
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_account:5433/account_info
      SPRING_PROFILES_ACTIVATE: docker
    depends_on:
      - postgres_account

  postgres_auth:
    container_name: postgres_auth
    image: postgres
    environment:
      POSTGRES_PASSWORD: R@d!0252
      POSTGRES_USER: postgres
      POSTGRES_DB: user_info
      PGDATA: /var/lib/postgresql/data
    volumes:
      - //c/postgres_auth_container_data:/var/lib/postgresql/data
    expose:
      - "5434"
    ports:
      - "5434:5434"
    command: -p 5434
    restart: always

  auth_service:
    image: radolina/auth_service_img:latest
    container_name: auth_service
    ports:
      - "8085:8084"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_auth:5434/user_info
      SPRING_PROFILES_ACTIVATE: docker
    depends_on:
      - postgres_auth

  postgres_comment:
    container_name: postgres_comment
    image: postgres
    environment:
      POSTGRES_PASSWORD: R@d!0252
      POSTGRES_USER: postgres
      POSTGRES_DB: comment_info
      PGDATA: /var/lib/postgresql/data
    volumes:
      - //c/postgres_comment_container_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: always

  comment_service:
    image: radolina/comment_service_img:latest
    container_name: comment_service
    ports:
      - 8082:8082
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_comment:5432/comment_info
      SPRING_PROFILES_ACTIVATE: docker
    depends_on:
      - postgres_comment

  discovery_server:
    image: radolina/discovery_server_img:latest
    container_name: discovery_server
    ports:
      - 8761:8761
    environment:
      SPRING_PROFILES_ACTIVATE: docker

  api_gateway:
    image: radolina/api_gateway_img:latest
    container_name: api_gateway
    ports:
      - 8181:8080
    expose:
      - 8181
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - discovery_server



  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
#    extra_hosts:
#      - host.docker.internal:host-gateway
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - post_service
      - account_service
      - comment_service
      - auth_service

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password

  my-rabbit:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    container_name: my-rabbit
    restart: always




